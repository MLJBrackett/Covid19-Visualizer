*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


#ontariolink{
    margin-top: 2rem;
    a{
        font-size:1.5em;
        text-decoration: none;
        color:black;
        padding:1em;
    }
}

.items{
    margin: 1em 0em 1em 0em;
}

.item-container{
    margin-bottom: 5em;
    h2{
        margin-top:2rem;
    }
}

.all-equipment
{
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    @media(max-width: 886px)
    {
        // grid-template-columns: repeat(1, 1fr);
        display: block;
    }
}


// CARDS
// Parent gotta be relative and the children gotta be absolute
// This way, the absolute items will be positioned according to their parents
.card
{
    position: relative;
    width: 25em;
    height: 15em;
    // background-color: #444;
    border-radius: 8px;
    display: flex; // wow this is useful
    left: 50%;
    transform: translateX(-50%);
    margin-top: 1.5em;

    .front-card
    {
        h1
        {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 1.5em;
            margin-left: 0.5em;
        }

        p
        {
            margin-left: 0.5em;
        }

        position: absolute;
        background-color: lightseagreen;
        transition: all 1s ease-in-out;
        width: 100%;
        height: 100%;
        border-radius: 8px;
        color: white;
        overflow: visible;
        display: table-row;
        // transition: all 0.5s ease-in-out;
        backface-visibility: hidden;
    }

    .back-card
    {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        transform: rotateY(180deg);
        backface-visibility: hidden;
        background-color: skyblue;
        border-radius: 8px;
        transition: all 1s ease-in-out;
        display: table;

        h1
        {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 1em;
            margin-left: 0.5em;
        }

    }
    
    // So when we hover on the card, I need front-card to rotate 180deg and get hidden and rotate the back side 0deg so we can see it
    &:hover
    {
        .front-card
        {
            transform: rotateY(180deg);
            transition: all 1s ease-in-out;
            cursor: pointer;
        }

        .back-card
        {
            transform: rotateY(0deg);
            transition: all 1s ease-in-out;
            cursor: pointer;
        }


        margin-bottom: 5em;
        transition: all 1s ease-in;
    }


    transition: all 1s ease-in;
    cursor: pointer;

}












p
{
    margin: 1em auto 0em auto;
    // max-width: 50%;
}